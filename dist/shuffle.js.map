{"version":3,"file":"shuffle.js","sources":["../node_modules/tiny-emitter/index.js","../node_modules/matches-selector/index.js","../node_modules/throttleit/index.js","../node_modules/array-parallel/index.js","../src/get-number.js","../src/point.js","../src/classes.js","../src/shuffle-item.js","../src/computed-size.js","../src/get-number-style.js","../src/sorter.js","../src/on-transition-end.js","../src/array-max.js","../src/array-min.js","../src/layout.js","../src/shuffle.js"],"sourcesContent":["function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n","'use strict';\n\nvar proto = Element.prototype;\nvar vendor = proto.matches\n  || proto.matchesSelector\n  || proto.webkitMatchesSelector\n  || proto.mozMatchesSelector\n  || proto.msMatchesSelector\n  || proto.oMatchesSelector;\n\nmodule.exports = match;\n\n/**\n * Match `el` to `selector`.\n *\n * @param {Element} el\n * @param {String} selector\n * @return {Boolean}\n * @api public\n */\n\nfunction match(el, selector) {\n  if (vendor) return vendor.call(el, selector);\n  var nodes = el.parentNode.querySelectorAll(selector);\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i] == el) return true;\n  }\n  return false;\n}","module.exports = throttle;\n\n/**\n * Returns a new function that, when invoked, invokes `func` at most once per `wait` milliseconds.\n *\n * @param {Function} func Function to wrap.\n * @param {Number} wait Number of milliseconds that must elapse between `func` invocations.\n * @return {Function} A new function that wraps the `func` function passed in.\n */\n\nfunction throttle (func, wait) {\n  var ctx, args, rtn, timeoutID; // caching\n  var last = 0;\n\n  return function throttled () {\n    ctx = this;\n    args = arguments;\n    var delta = new Date() - last;\n    if (!timeoutID)\n      if (delta >= wait) call();\n      else timeoutID = setTimeout(call, wait - delta);\n    return rtn;\n  };\n\n  function call () {\n    timeoutID = 0;\n    last = +new Date();\n    rtn = func.apply(ctx, args);\n    ctx = null;\n    args = null;\n  }\n}\n","module.exports = function parallel(fns, context, callback) {\n  if (!callback) {\n    if (typeof context === 'function') {\n      callback = context\n      context = null\n    } else {\n      callback = noop\n    }\n  }\n\n  var pending = fns && fns.length\n  if (!pending) return callback(null, []);\n\n  var finished = false\n  var results = new Array(pending)\n\n  fns.forEach(context ? function (fn, i) {\n    fn.call(context, maybeDone(i))\n  } : function (fn, i) {\n    fn(maybeDone(i))\n  })\n\n  function maybeDone(i) {\n    return function (err, result) {\n      if (finished) return;\n\n      if (err) {\n        callback(err, results)\n        finished = true\n        return\n      }\n\n      results[i] = result\n\n      if (!--pending) callback(null, results);\n    }\n  }\n}\n\nfunction noop() {}\n","/**\n * Always returns a numeric value, given a value. Logic from jQuery's `isNumeric`.\n * @param {*} value Possibly numeric value.\n * @return {number} `value` or zero if `value` isn't numeric.\n */\nexport default function getNumber(value) {\n  return parseFloat(value) || 0;\n}\n","import getNumber from './get-number';\n\nclass Point {\n\n  /**\n   * Represents a coordinate pair.\n   * @param {number} [x=0] X.\n   * @param {number} [y=0] Y.\n   */\n  constructor(x, y) {\n    this.x = getNumber(x);\n    this.y = getNumber(y);\n  }\n\n  /**\n   * Whether two points are equal.\n   * @param {Point} a Point A.\n   * @param {Point} b Point B.\n   * @return {boolean}\n   */\n  static equals(a, b) {\n    return a.x === b.x && a.y === b.y;\n  }\n}\n\nexport default Point;\n","export default {\n  BASE: 'shuffle',\n  SHUFFLE_ITEM: 'shuffle-item',\n  VISIBLE: 'shuffle-item--visible',\n  HIDDEN: 'shuffle-item--hidden',\n};\n","import Point from './point';\nimport Classes from './classes';\n\nlet id = 0;\n\nclass ShuffleItem {\n  constructor(element) {\n    id += 1;\n    this.id = id;\n    this.element = element;\n    this.isVisible = true;\n  }\n\n  show() {\n    this.isVisible = true;\n    this.element.classList.remove(Classes.HIDDEN);\n    this.element.classList.add(Classes.VISIBLE);\n    this.element.removeAttribute('aria-hidden');\n  }\n\n  hide() {\n    this.isVisible = false;\n    this.element.classList.remove(Classes.VISIBLE);\n    this.element.classList.add(Classes.HIDDEN);\n    this.element.setAttribute('aria-hidden', true);\n  }\n\n  init() {\n    this.addClasses([Classes.SHUFFLE_ITEM, Classes.VISIBLE]);\n    this.applyCss(ShuffleItem.Css.INITIAL);\n    this.scale = ShuffleItem.Scale.VISIBLE;\n    this.point = new Point();\n  }\n\n  addClasses(classes) {\n    classes.forEach((className) => {\n      this.element.classList.add(className);\n    });\n  }\n\n  removeClasses(classes) {\n    classes.forEach((className) => {\n      this.element.classList.remove(className);\n    });\n  }\n\n  applyCss(obj) {\n    Object.keys(obj).forEach((key) => {\n      this.element.style[key] = obj[key];\n    });\n  }\n\n  dispose() {\n    this.removeClasses([\n      Classes.HIDDEN,\n      Classes.VISIBLE,\n      Classes.SHUFFLE_ITEM,\n    ]);\n\n    this.element.removeAttribute('style');\n    this.element = null;\n  }\n}\n\nShuffleItem.Css = {\n  INITIAL: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    visibility: 'visible',\n    'will-change': 'transform',\n  },\n  VISIBLE: {\n    before: {\n      opacity: 1,\n      visibility: 'visible',\n    },\n    after: {},\n  },\n  HIDDEN: {\n    before: {\n      opacity: 0,\n    },\n    after: {\n      visibility: 'hidden',\n    },\n  },\n};\n\nShuffleItem.Scale = {\n  VISIBLE: 1,\n  HIDDEN: 0.001,\n};\n\nexport default ShuffleItem;\n","const element = document.body || document.documentElement;\nconst e = document.createElement('div');\ne.style.cssText = 'width:10px;padding:2px;box-sizing:border-box;';\nelement.appendChild(e);\n\nconst width = window.getComputedStyle(e, null).width;\nconst ret = width === '10px';\n\nelement.removeChild(e);\n\nexport default ret;\n","import getNumber from './get-number';\nimport COMPUTED_SIZE_INCLUDES_PADDING from './computed-size';\n\n/**\n * Retrieve the computed style for an element, parsed as a float.\n * @param {Element} element Element to get style for.\n * @param {string} style Style property.\n * @param {CSSStyleDeclaration} [styles] Optionally include clean styles to\n *     use instead of asking for them again.\n * @return {number} The parsed computed value or zero if that fails because IE\n *     will return 'auto' when the element doesn't have margins instead of\n *     the computed style.\n */\nexport default function getNumberStyle(element, style,\n  styles = window.getComputedStyle(element, null)) {\n  let value = getNumber(styles[style]);\n\n  // Support IE<=11 and W3C spec.\n  if (!COMPUTED_SIZE_INCLUDES_PADDING && style === 'width') {\n    value += getNumber(styles.paddingLeft) +\n      getNumber(styles.paddingRight) +\n      getNumber(styles.borderLeftWidth) +\n      getNumber(styles.borderRightWidth);\n  } else if (!COMPUTED_SIZE_INCLUDES_PADDING && style === 'height') {\n    value += getNumber(styles.paddingTop) +\n      getNumber(styles.paddingBottom) +\n      getNumber(styles.borderTopWidth) +\n      getNumber(styles.borderBottomWidth);\n  }\n\n  return value;\n}\n","/**\n * Fisher-Yates shuffle.\n * http://stackoverflow.com/a/962890/373422\n * https://bost.ocks.org/mike/shuffle/\n * @param {Array} array Array to shuffle.\n * @return {Array} Randomly sorted array.\n */\nfunction randomize(array) {\n  let n = array.length;\n\n  while (n) {\n    n -= 1;\n    const i = Math.floor(Math.random() * (n + 1));\n    const temp = array[i];\n    array[i] = array[n];\n    array[n] = temp;\n  }\n\n  return array;\n}\n\nconst defaults = {\n  // Use array.reverse() to reverse the results\n  reverse: false,\n\n  // Sorting function\n  by: null,\n\n  // If true, this will skip the sorting and return a randomized order in the array\n  randomize: false,\n\n  // Determines which property of each item in the array is passed to the\n  // sorting method.\n  key: 'element',\n};\n\n// You can return `undefined` from the `by` function to revert to DOM order.\nexport default function sorter(arr, options) {\n  const opts = Object.assign({}, defaults, options);\n  const original = Array.from(arr);\n  let revert = false;\n\n  if (!arr.length) {\n    return [];\n  }\n\n  if (opts.randomize) {\n    return randomize(arr);\n  }\n\n  // Sort the elements by the opts.by function.\n  // If we don't have opts.by, default to DOM order\n  if (typeof opts.by === 'function') {\n    arr.sort((a, b) => {\n      // Exit early if we already know we want to revert\n      if (revert) {\n        return 0;\n      }\n\n      const valA = opts.by(a[opts.key]);\n      const valB = opts.by(b[opts.key]);\n\n      // If both values are undefined, use the DOM order\n      if (valA === undefined && valB === undefined) {\n        revert = true;\n        return 0;\n      }\n\n      if (valA < valB || valA === 'sortFirst' || valB === 'sortLast') {\n        return -1;\n      }\n\n      if (valA > valB || valA === 'sortLast' || valB === 'sortFirst') {\n        return 1;\n      }\n\n      return 0;\n    });\n  }\n\n  // Revert to the original array if necessary\n  if (revert) {\n    return original;\n  }\n\n  if (opts.reverse) {\n    arr.reverse();\n  }\n\n  return arr;\n}\n","const transitions = {};\nconst eventName = 'transitionend';\nlet count = 0;\n\nfunction uniqueId() {\n  count += 1;\n  return eventName + count;\n}\n\nexport function cancelTransitionEnd(id) {\n  if (transitions[id]) {\n    transitions[id].element.removeEventListener(eventName, transitions[id].listener);\n    transitions[id] = null;\n    return true;\n  }\n\n  return false;\n}\n\nexport function onTransitionEnd(element, callback) {\n  const id = uniqueId();\n  const listener = (evt) => {\n    if (evt.currentTarget === evt.target) {\n      cancelTransitionEnd(id);\n      callback(evt);\n    }\n  };\n\n  element.addEventListener(eventName, listener);\n\n  transitions[id] = { element, listener };\n\n  return id;\n}\n","export default function arrayMax(array) {\n  return Math.max.apply(Math, array); // eslint-disable-line prefer-spread\n}\n","export default function arrayMin(array) {\n  return Math.min.apply(Math, array); // eslint-disable-line prefer-spread\n}\n","import Point from './point';\nimport arrayMax from './array-max';\nimport arrayMin from './array-min';\n\n/**\n * Determine the number of columns an items spans.\n * @param {number} itemWidth Width of the item.\n * @param {number} columnWidth Width of the column (includes gutter).\n * @param {number} columns Total number of columns\n * @param {number} threshold A buffer value for the size of the column to fit.\n * @return {number}\n */\nexport function getColumnSpan(itemWidth, columnWidth, columns, threshold) {\n  let columnSpan = itemWidth / columnWidth;\n\n  // If the difference between the rounded column span number and the\n  // calculated column span number is really small, round the number to\n  // make it fit.\n  if (Math.abs(Math.round(columnSpan) - columnSpan) < threshold) {\n    // e.g. columnSpan = 4.0089945390298745\n    columnSpan = Math.round(columnSpan);\n  }\n\n  // Ensure the column span is not more than the amount of columns in the whole layout.\n  return Math.min(Math.ceil(columnSpan), columns);\n}\n\n/**\n * Retrieves the column set to use for placement.\n * @param {number} columnSpan The number of columns this current item spans.\n * @param {number} columns The total columns in the grid.\n * @return {Array.<number>} An array of numbers represeting the column set.\n */\nexport function getAvailablePositions(positions, columnSpan, columns) {\n  // The item spans only one column.\n  if (columnSpan === 1) {\n    return positions;\n  }\n\n  // The item spans more than one column, figure out how many different\n  // places it could fit horizontally.\n  // The group count is the number of places within the positions this block\n  // could fit, ignoring the current positions of items.\n  // Imagine a 2 column brick as the second item in a 4 column grid with\n  // 10px height each. Find the places it would fit:\n  // [20, 10, 10, 0]\n  //  |   |   |\n  //  *   *   *\n  //\n  // Then take the places which fit and get the bigger of the two:\n  // max([20, 10]), max([10, 10]), max([10, 0]) = [20, 10, 0]\n  //\n  // Next, find the first smallest number (the short column).\n  // [20, 10, 0]\n  //          |\n  //          *\n  //\n  // And that's where it should be placed!\n  //\n  // Another example where the second column's item extends past the first:\n  // [10, 20, 10, 0] => [20, 20, 10] => 10\n  const available = [];\n\n  // For how many possible positions for this item there are.\n  for (let i = 0; i <= columns - columnSpan; i++) {\n    // Find the bigger value for each place it could fit.\n    available.push(arrayMax(positions.slice(i, i + columnSpan)));\n  }\n\n  return available;\n}\n\n/**\n * Find index of short column, the first from the left where this item will go.\n *\n * @param {Array.<number>} positions The array to search for the smallest number.\n * @param {number} buffer Optional buffer which is very useful when the height\n *     is a percentage of the width.\n * @return {number} Index of the short column.\n */\nexport function getShortColumn(positions, buffer) {\n  const minPosition = arrayMin(positions);\n  for (let i = 0, len = positions.length; i < len; i++) {\n    if (positions[i] >= minPosition - buffer && positions[i] <= minPosition + buffer) {\n      return i;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Determine the location of the next item, based on its size.\n * @param {Object} itemSize Object with width and height.\n * @param {Array.<number>} positions Positions of the other current items.\n * @param {number} gridSize The column width or row height.\n * @param {number} total The total number of columns or rows.\n * @param {number} threshold Buffer value for the column to fit.\n * @param {number} buffer Vertical buffer for the height of items.\n * @return {Point}\n */\nexport function getItemPosition({ itemSize, positions, gridSize, total, threshold, buffer }) {\n  const span = getColumnSpan(itemSize.width, gridSize, total, threshold);\n  const setY = getAvailablePositions(positions, span, total);\n  const shortColumnIndex = getShortColumn(setY, buffer);\n\n  // Position the item\n  const point = new Point(\n    Math.round(gridSize * shortColumnIndex),\n    Math.round(setY[shortColumnIndex]));\n\n  // Update the columns array with the new values for each column.\n  // e.g. before the update the columns could be [250, 0, 0, 0] for an item\n  // which spans 2 columns. After it would be [250, itemHeight, itemHeight, 0].\n  const setHeight = setY[shortColumnIndex] + itemSize.height;\n  for (let i = 0; i < span; i++) {\n    positions[shortColumnIndex + i] = setHeight;\n  }\n\n  return point;\n}\n","import TinyEmitter from 'tiny-emitter';\nimport matches from 'matches-selector';\nimport throttle from 'throttleit';\nimport parallel from 'array-parallel';\n\nimport Point from './point';\nimport ShuffleItem from './shuffle-item';\nimport Classes from './classes';\nimport getNumberStyle from './get-number-style';\nimport sorter from './sorter';\nimport { onTransitionEnd, cancelTransitionEnd } from './on-transition-end';\nimport { getItemPosition, getColumnSpan, getAvailablePositions, getShortColumn } from './layout';\nimport arrayMax from './array-max';\n\nfunction arrayUnique(x) {\n  return Array.from(new Set(x));\n}\n\n// Used for unique instance variables\nlet id = 0;\n\nclass Shuffle extends TinyEmitter {\n\n  /**\n   * Categorize, sort, and filter a responsive grid of items.\n   *\n   * @param {Element} element An element which is the parent container for the grid items.\n   * @param {Object} [options=Shuffle.options] Options object.\n   * @constructor\n   */\n  constructor(element, options = {}) {\n    super();\n    this.options = Object.assign({}, Shuffle.options, options);\n\n    this.useSizer = false;\n    this.lastSort = {};\n    this.group = Shuffle.ALL_ITEMS;\n    this.lastFilter = Shuffle.ALL_ITEMS;\n    this.isEnabled = true;\n    this.isDestroyed = false;\n    this.isInitialized = false;\n    this._transitions = [];\n    this.isTransitioning = false;\n    this._queue = [];\n\n    const el = this._getElementOption(element);\n\n    if (!el) {\n      throw new TypeError('Shuffle needs to be initialized with an element.');\n    }\n\n    this.element = el;\n    this.id = 'shuffle_' + id;\n    id += 1;\n\n    this._init();\n    this.isInitialized = true;\n  }\n\n  _init() {\n    this.items = this._getItems();\n\n    this.options.sizer = this._getElementOption(this.options.sizer);\n\n    if (this.options.sizer) {\n      this.useSizer = true;\n    }\n\n    // Add class and invalidate styles\n    this.element.classList.add(Shuffle.Classes.BASE);\n\n    // Set initial css for each item\n    this._initItems(this.items);\n\n    // Bind resize events\n    this._onResize = this._getResizeFunction();\n    window.addEventListener('resize', this._onResize);\n\n    // If the page has not already emitted the `load` event, call layout on load.\n    // This avoids layout issues caused by images and fonts loading after the\n    // instance has been initialized.\n    if (document.readyState !== 'complete') {\n      const layout = this.layout.bind(this);\n      window.addEventListener('load', function onLoad() {\n        window.removeEventListener('load', onLoad);\n        layout();\n      });\n    }\n\n    // Get container css all in one request. Causes reflow\n    const containerCss = window.getComputedStyle(this.element, null);\n    const containerWidth = Shuffle.getSize(this.element).width;\n\n    // Add styles to the container if it doesn't have them.\n    this._validateStyles(containerCss);\n\n    // We already got the container's width above, no need to cause another\n    // reflow getting it again... Calculate the number of columns there will be\n    this._setColumns(containerWidth);\n\n    // Kick off!\n    this.filter(this.options.group, this.options.initialSort);\n\n    // The shuffle items haven't had transitions set on them yet so the user\n    // doesn't see the first layout. Set them now that the first layout is done.\n    // First, however, a synchronous layout must be caused for the previous\n    // styles to be applied without transitions.\n    this.element.offsetWidth; // eslint-disable-line no-unused-expressions\n    this.setItemTransitions(this.items);\n    this.element.style.transition = 'height ' + this.options.speed + 'ms ' + this.options.easing;\n  }\n\n  /**\n   * Returns a throttled and proxied function for the resize handler.\n   * @return {Function}\n   * @private\n   */\n  _getResizeFunction() {\n    const resizeFunction = this._handleResize.bind(this);\n    return this.options.throttle ?\n        this.options.throttle(resizeFunction, this.options.throttleTime) :\n        resizeFunction;\n  }\n\n  /**\n   * Retrieve an element from an option.\n   * @param {string|jQuery|Element} option The option to check.\n   * @return {?Element} The plain element or null.\n   * @private\n   */\n  _getElementOption(option) {\n    // If column width is a string, treat is as a selector and search for the\n    // sizer element within the outermost container\n    if (typeof option === 'string') {\n      return this.element.querySelector(option);\n\n    // Check for an element\n    } else if (option && option.nodeType && option.nodeType === 1) {\n      return option;\n\n    // Check for jQuery object\n    } else if (option && option.jquery) {\n      return option[0];\n    }\n\n    return null;\n  }\n\n  /**\n   * Ensures the shuffle container has the css styles it needs applied to it.\n   * @param {Object} styles Key value pairs for position and overflow.\n   * @private\n   */\n  _validateStyles(styles) {\n    // Position cannot be static.\n    if (styles.position === 'static') {\n      this.element.style.position = 'relative';\n    }\n\n    // Overflow has to be hidden.\n    if (styles.overflow !== 'hidden') {\n      this.element.style.overflow = 'hidden';\n    }\n  }\n\n  /**\n   * Filter the elements by a category.\n   * @param {string} [category] Category to filter by. If it's given, the last\n   *     category will be used to filter the items.\n   * @param {Array} [collection] Optionally filter a collection. Defaults to\n   *     all the items.\n   * @return {!{visible: Array, hidden: Array}}\n   * @private\n   */\n  _filter(category = this.lastFilter, collection = this.items) {\n    const set = this._getFilteredSets(category, collection);\n\n    // Individually add/remove hidden/visible classes\n    this._toggleFilterClasses(set);\n\n    // Save the last filter in case elements are appended.\n    this.lastFilter = category;\n\n    // This is saved mainly because providing a filter function (like searching)\n    // will overwrite the `lastFilter` property every time its called.\n    if (typeof category === 'string') {\n      this.group = category;\n    }\n\n    return set;\n  }\n\n  /**\n   * Returns an object containing the visible and hidden elements.\n   * @param {string|Function} category Category or function to filter by.\n   * @param {Array.<Element>} items A collection of items to filter.\n   * @return {!{visible: Array, hidden: Array}}\n   * @private\n   */\n  _getFilteredSets(category, items) {\n    let visible = [];\n    const hidden = [];\n\n    // category === 'all', add visible class to everything\n    if (category === Shuffle.ALL_ITEMS) {\n      visible = items;\n\n    // Loop through each item and use provided function to determine\n    // whether to hide it or not.\n    } else {\n      items.forEach((item) => {\n        if (this._doesPassFilter(category, item.element)) {\n          visible.push(item);\n        } else {\n          hidden.push(item);\n        }\n      });\n    }\n\n    return {\n      visible,\n      hidden,\n    };\n  }\n\n  /**\n   * Test an item to see if it passes a category.\n   * @param {string|Function} category Category or function to filter by.\n   * @param {Element} element An element to test.\n   * @return {boolean} Whether it passes the category/filter.\n   * @private\n   */\n  _doesPassFilter(category, element) {\n    if (typeof category === 'function') {\n      return category.call(element, element, this);\n    }\n\n    // Check each element's data-groups attribute against the given category.\n    const attr = element.getAttribute('data-' + Shuffle.FILTER_ATTRIBUTE_KEY);\n    const keys = this.options.delimeter ?\n          attr.split(this.options.delimeter) :\n          JSON.parse(attr);\n\n    function testCategory(category) {\n      return keys.includes(category);\n    }\n\n    if (Array.isArray(category)) {\n      if (this.options.filterMode === Shuffle.FilterMode.ANY) {\n        return category.some(testCategory);\n      }\n      return category.every(testCategory);\n    }\n\n    return keys.includes(category);\n  }\n\n  /**\n   * Toggles the visible and hidden class names.\n   * @param {{visible, hidden}} Object with visible and hidden arrays.\n   * @private\n   */\n  _toggleFilterClasses({ visible, hidden }) {\n    visible.forEach((item) => {\n      item.show();\n    });\n\n    hidden.forEach((item) => {\n      item.hide();\n    });\n  }\n\n  /**\n   * Set the initial css for each item\n   * @param {Array.<ShuffleItem>} items Set to initialize.\n   * @private\n   */\n  _initItems(items) {\n    items.forEach((item) => {\n      item.init();\n    });\n  }\n\n  /**\n   * Remove element reference and styles.\n   * @param {Array.<ShuffleItem>} items Set to dispose.\n   * @private\n   */\n  _disposeItems(items) {\n    items.forEach((item) => {\n      item.dispose();\n    });\n  }\n\n  /**\n   * Updates the visible item count.\n   * @private\n   */\n  _updateItemCount() {\n    this.visibleItems = this._getFilteredItems().length;\n  }\n\n  /**\n   * Sets css transform transition on a group of elements. This is not executed\n   * at the same time as `item.init` so that transitions don't occur upon\n   * initialization of Shuffle.\n   * @param {Array.<ShuffleItem>} items Shuffle items to set transitions on.\n   * @protected\n   */\n  setItemTransitions(items) {\n    const speed = this.options.speed;\n    const easing = this.options.easing;\n\n    const str = this.options.useTransforms ?\n      `transform ${speed}ms ${easing}, opacity ${speed}ms ${easing}` :\n      `top ${speed}ms ${easing}, left ${speed}ms ${easing}, opacity ${speed}ms ${easing}`;\n\n    items.forEach((item) => {\n      item.element.style.transition = str;\n    });\n  }\n\n  _getItems() {\n    return Array.from(this.element.children)\n      .filter(el => matches(el, this.options.itemSelector))\n      .map(el => new ShuffleItem(el));\n  }\n\n  /**\n   * When new elements are added to the shuffle container, update the array of\n   * items because that is the order `_layout` calls them.\n   * @param {Array.<ShuffleItem>} items Items to track.\n   */\n  _saveNewItems(items) {\n    const children = Array.from(this.element.children);\n    this.items = sorter(this.items.concat(items), {\n      by(element) {\n        return children.indexOf(element);\n      },\n    });\n  }\n\n  _getFilteredItems() {\n    return this.items.filter(item => item.isVisible);\n  }\n\n  _getConcealedItems() {\n    return this.items.filter(item => !item.isVisible);\n  }\n\n  /**\n   * Returns the column size, based on column width and sizer options.\n   * @param {number} containerWidth Size of the parent container.\n   * @param {number} gutterSize Size of the gutters.\n   * @return {number}\n   * @private\n   */\n  _getColumnSize(containerWidth, gutterSize) {\n    let size;\n\n    // If the columnWidth property is a function, then the grid is fluid\n    if (typeof this.options.columnWidth === 'function') {\n      size = this.options.columnWidth(containerWidth);\n\n    // columnWidth option isn't a function, are they using a sizing element?\n    } else if (this.useSizer) {\n      size = Shuffle.getSize(this.options.sizer).width;\n\n    // if not, how about the explicitly set option?\n    } else if (this.options.columnWidth) {\n      size = this.options.columnWidth;\n\n    // or use the size of the first item\n    } else if (this.items.length > 0) {\n      size = Shuffle.getSize(this.items[0].element, true).width;\n\n    // if there's no items, use size of container\n    } else {\n      size = containerWidth;\n    }\n\n    // Don't let them set a column width of zero.\n    if (size === 0) {\n      size = containerWidth;\n    }\n\n    return size + gutterSize;\n  }\n\n  /**\n   * Returns the gutter size, based on gutter width and sizer options.\n   * @param {number} containerWidth Size of the parent container.\n   * @return {number}\n   * @private\n   */\n  _getGutterSize(containerWidth) {\n    let size;\n    if (typeof this.options.gutterWidth === 'function') {\n      size = this.options.gutterWidth(containerWidth);\n    } else if (this.useSizer) {\n      size = getNumberStyle(this.options.sizer, 'marginLeft');\n    } else {\n      size = this.options.gutterWidth;\n    }\n\n    return size;\n  }\n\n  /**\n   * Calculate the number of columns to be used. Gets css if using sizer element.\n   * @param {number} [containerWidth] Optionally specify a container width if\n   *    it's already available.\n   */\n  _setColumns(containerWidth = Shuffle.getSize(this.element).width) {\n    const gutter = this._getGutterSize(containerWidth);\n    const columnWidth = this._getColumnSize(containerWidth, gutter);\n    let calculatedColumns = (containerWidth + gutter) / columnWidth;\n\n    // Widths given from getStyles are not precise enough...\n    if (Math.abs(Math.round(calculatedColumns) - calculatedColumns) <\n        this.options.columnThreshold) {\n      // e.g. calculatedColumns = 11.998876\n      calculatedColumns = Math.round(calculatedColumns);\n    }\n\n    this.cols = Math.max(Math.floor(calculatedColumns), 1);\n    this.containerWidth = containerWidth;\n    this.colWidth = columnWidth;\n  }\n\n  /**\n   * Adjust the height of the grid\n   */\n  _setContainerSize() {\n    this.element.style.height = this._getContainerSize() + 'px';\n  }\n\n  /**\n   * Based on the column heights, it returns the biggest one.\n   * @return {number}\n   * @private\n   */\n  _getContainerSize() {\n    return arrayMax(this.positions);\n  }\n\n  /**\n   * Get the clamped stagger amount.\n   * @param {number} index Index of the item to be staggered.\n   * @return {number}\n   */\n  _getStaggerAmount(index) {\n    return Math.min(index * this.options.staggerAmount, this.options.staggerAmountMax);\n  }\n\n  /**\n   * Emit an event from this instance.\n   * @param {string} name Event name.\n   * @param {Object} [data={}] Optional object data.\n   */\n  _dispatch(name, data = {}) {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    data.shuffle = this;\n    this.emit(name, data);\n  }\n\n  /**\n   * Zeros out the y columns array, which is used to determine item placement.\n   * @private\n   */\n  _resetCols() {\n    let i = this.cols;\n    this.positions = [];\n    while (i) {\n      i -= 1;\n      this.positions.push(0);\n    }\n  }\n\n  /**\n   * Loops through each item that should be shown and calculates the x, y position.\n   * @param {Array.<ShuffleItem>} items Array of items that will be shown/layed\n   *     out in order in their array.\n   */\n  _layout(items) {\n    let count = 0;\n    items.forEach((item) => {\n      const currPos = item.point;\n      const currScale = item.scale;\n      const itemSize = Shuffle.getSize(item.element, true);\n      const pos = this._getItemPosition(itemSize);\n\n      function callback() {\n        item.element.style.transitionDelay = '';\n        item.applyCss(ShuffleItem.Css.VISIBLE.after);\n      }\n\n      // If the item will not change its position, do not add it to the render\n      // queue. Transitions don't fire when setting a property to the same value.\n      if (Point.equals(currPos, pos) && currScale === ShuffleItem.Scale.VISIBLE) {\n        item.applyCss(ShuffleItem.Css.VISIBLE.before);\n        callback();\n        return;\n      }\n\n      item.point = pos;\n      item.scale = ShuffleItem.Scale.VISIBLE;\n\n      // Clone the object so that the `before` object isn't modified when the\n      // transition delay is added.\n      const styles = Object.assign({}, ShuffleItem.Css.VISIBLE.before);\n      styles.transitionDelay = this._getStaggerAmount(count) + 'ms';\n\n      this._queue.push({\n        item,\n        styles,\n        callback,\n      });\n\n      count += 1;\n    });\n  }\n\n  /**\n   * Determine the location of the next item, based on its size.\n   * @param {{width: number, height: number}} itemSize Object with width and height.\n   * @return {Point}\n   * @private\n   */\n  _getItemPosition(itemSize) {\n    return getItemPosition({\n      itemSize,\n      positions: this.positions,\n      gridSize: this.colWidth,\n      total: this.cols,\n      threshold: this.options.columnThreshold,\n      buffer: this.options.buffer,\n    });\n  }\n\n  /**\n   * Hides the elements that don't match our filter.\n   * @param {Array.<ShuffleItem>} collection Collection to shrink.\n   * @private\n   */\n  _shrink(collection = this._getConcealedItems()) {\n    let count = 0;\n    collection.forEach((item) => {\n      function callback() {\n        item.applyCss(ShuffleItem.Css.HIDDEN.after);\n      }\n\n      // Continuing would add a transitionend event listener to the element, but\n      // that listener would not execute because the transform and opacity would\n      // stay the same.\n      // The callback is executed here because it is not guaranteed to be called\n      // after the transitionend event because the transitionend could be\n      // canceled if another animation starts.\n      if (item.scale === ShuffleItem.Scale.HIDDEN) {\n        item.applyCss(ShuffleItem.Css.HIDDEN.before);\n        callback();\n        return;\n      }\n\n      item.scale = ShuffleItem.Scale.HIDDEN;\n\n      const styles = Object.assign({}, ShuffleItem.Css.HIDDEN.before);\n      styles.transitionDelay = this._getStaggerAmount(count) + 'ms';\n\n      this._queue.push({\n        item,\n        styles,\n        callback,\n      });\n\n      count += 1;\n    });\n  }\n\n  /**\n   * Resize handler.\n   * @private\n   */\n  _handleResize() {\n    // If shuffle is disabled, destroyed, don't do anything\n    if (!this.isEnabled || this.isDestroyed) {\n      return;\n    }\n\n    this.update();\n  }\n\n  /**\n   * Returns styles which will be applied to the an item for a transition.\n   * @param {Object} obj Transition options.\n   * @return {!Object} Transforms for transitions, left/top for animate.\n   * @protected\n   */\n  getStylesForTransition({ item, styles }) {\n    if (!styles.transitionDelay) {\n      styles.transitionDelay = '0ms';\n    }\n\n    const x = item.point.x;\n    const y = item.point.y;\n\n    if (this.options.useTransforms) {\n      styles.transform = `translate(${x}px, ${y}px) scale(${item.scale})`;\n    } else {\n      styles.left = x + 'px';\n      styles.top = y + 'px';\n    }\n\n    return styles;\n  }\n\n  /**\n   * Listen for the transition end on an element and execute the itemCallback\n   * when it finishes.\n   * @param {Element} element Element to listen on.\n   * @param {Function} itemCallback Callback for the item.\n   * @param {Function} done Callback to notify `parallel` that this one is done.\n   */\n  _whenTransitionDone(element, itemCallback, done) {\n    const id = onTransitionEnd(element, (evt) => {\n      itemCallback();\n      done(null, evt);\n    });\n\n    this._transitions.push(id);\n  }\n\n  /**\n   * Return a function which will set CSS styles and call the `done` function\n   * when (if) the transition finishes.\n   * @param {Object} opts Transition object.\n   * @return {Function} A function to be called with a `done` function.\n   */\n  _getTransitionFunction(opts) {\n    return (done) => {\n      opts.item.applyCss(this.getStylesForTransition(opts));\n      this._whenTransitionDone(opts.item.element, opts.callback, done);\n    };\n  }\n\n  /**\n   * Execute the styles gathered in the style queue. This applies styles to elements,\n   * triggering transitions.\n   * @private\n   */\n  _processQueue() {\n    if (this.isTransitioning) {\n      this._cancelMovement();\n    }\n\n    const hasSpeed = this.options.speed > 0;\n    const hasQueue = this._queue.length > 0;\n\n    if (hasQueue && hasSpeed && this.isInitialized) {\n      this._startTransitions(this._queue);\n    } else if (hasQueue) {\n      this._styleImmediately(this._queue);\n      this._dispatch(Shuffle.EventType.LAYOUT);\n\n    // A call to layout happened, but none of the newly visible items will\n    // change position or the transition duration is zero, which will not trigger\n    // the transitionend event.\n    } else {\n      this._dispatch(Shuffle.EventType.LAYOUT);\n    }\n\n    // Remove everything in the style queue\n    this._queue.length = 0;\n  }\n\n  /**\n   * Wait for each transition to finish, the emit the layout event.\n   * @param {Array.<Object>} transitions Array of transition objects.\n   */\n  _startTransitions(transitions) {\n    // Set flag that shuffle is currently in motion.\n    this.isTransitioning = true;\n\n    // Create an array of functions to be called.\n    const callbacks = transitions.map(obj => this._getTransitionFunction(obj));\n\n    parallel(callbacks, this._movementFinished.bind(this));\n  }\n\n  _cancelMovement() {\n    // Remove the transition end event for each listener.\n    this._transitions.forEach(cancelTransitionEnd);\n\n    // Reset the array.\n    this._transitions.length = 0;\n\n    // Show it's no longer active.\n    this.isTransitioning = false;\n  }\n\n  /**\n   * Apply styles without a transition.\n   * @param {Array.<Object>} objects Array of transition objects.\n   * @private\n   */\n  _styleImmediately(objects) {\n    if (objects.length) {\n      const elements = objects.map(obj => obj.item.element);\n\n      Shuffle._skipTransitions(elements, () => {\n        objects.forEach((obj) => {\n          obj.item.applyCss(this.getStylesForTransition(obj));\n          obj.callback();\n        });\n      });\n    }\n  }\n\n  _movementFinished() {\n    this._transitions.length = 0;\n    this.isTransitioning = false;\n    this._dispatch(Shuffle.EventType.LAYOUT);\n  }\n\n  /**\n   * The magic. This is what makes the plugin 'shuffle'\n   * @param {string|Function|Array.<string>} [category] Category to filter by.\n   *     Can be a function, string, or array of strings.\n   * @param {Object} [sortObj] A sort object which can sort the visible set\n   */\n  filter(category, sortObj) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    if (!category || (category && category.length === 0)) {\n      category = Shuffle.ALL_ITEMS; // eslint-disable-line no-param-reassign\n    }\n\n    this._filter(category);\n\n    // Shrink each hidden item\n    this._shrink();\n\n    // How many visible elements?\n    this._updateItemCount();\n\n    // Update transforms on visible elements so they will animate to their new positions.\n    this.sort(sortObj);\n  }\n\n  /**\n   * Gets the visible elements, sorts them, and passes them to layout.\n   * @param {Object} sortOptions The options object to pass to `sorter`.\n   */\n  sort(sortOptions = this.lastSort) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    this._resetCols();\n\n    const items = sorter(this._getFilteredItems(), sortOptions);\n\n    this._layout(items);\n\n    // `_layout` always happens after `_shrink`, so it's safe to process the style\n    // queue here with styles from the shrink method.\n    this._processQueue();\n\n    // Adjust the height of the container.\n    this._setContainerSize();\n\n    this.lastSort = sortOptions;\n  }\n\n  /**\n   * Reposition everything.\n   * @param {boolean} isOnlyLayout If true, column and gutter widths won't be\n   *     recalculated.\n   */\n  update(isOnlyLayout) {\n    if (this.isEnabled) {\n      if (!isOnlyLayout) {\n        // Get updated colCount\n        this._setColumns();\n      }\n\n      // Layout items\n      this.sort();\n    }\n  }\n\n  /**\n   * Use this instead of `update()` if you don't need the columns and gutters updated\n   * Maybe an image inside `shuffle` loaded (and now has a height), which means calculations\n   * could be off.\n   */\n  layout() {\n    this.update(true);\n  }\n\n  /**\n   * New items have been appended to shuffle. Mix them in with the current\n   * filter or sort status.\n   * @param {Array.<Element>} newItems Collection of new items.\n   */\n  add(newItems) {\n    const items = arrayUnique(newItems).map(el => new ShuffleItem(el));\n\n    // Add classes and set initial positions.\n    this._initItems(items);\n\n    // Add transition to each item.\n    this.setItemTransitions(items);\n\n    // Update the list of items.\n    this._saveNewItems(items);\n\n    // Update layout/visibility of new and old items.\n    this.filter(this.lastFilter);\n  }\n\n  /**\n   * Disables shuffle from updating dimensions and layout on resize\n   */\n  disable() {\n    this.isEnabled = false;\n  }\n\n  /**\n   * Enables shuffle again\n   * @param {boolean} [isUpdateLayout=true] if undefined, shuffle will update columns and gutters\n   */\n  enable(isUpdateLayout) {\n    this.isEnabled = true;\n    if (isUpdateLayout !== false) {\n      this.update();\n    }\n  }\n\n  /**\n   * Remove 1 or more shuffle items\n   * @param {Array.<Element>} elements An array containing one or more\n   *     elements in shuffle\n   * @return {Shuffle} The shuffle object\n   */\n  remove(elements) {\n    if (!elements.length) {\n      return;\n    }\n\n    const collection = arrayUnique(elements);\n\n    const oldItems = collection\n      .map(element => this.getItemByElement(element))\n      .filter(item => !!item);\n\n    const handleLayout = () => {\n      this._disposeItems(oldItems);\n\n      // Remove the collection in the callback\n      collection.forEach((element) => {\n        element.parentNode.removeChild(element);\n      });\n\n      this._dispatch(Shuffle.EventType.REMOVED, { collection });\n    };\n\n    // Hide collection first.\n    this._toggleFilterClasses({\n      visible: [],\n      hidden: oldItems,\n    });\n\n    this._shrink(oldItems);\n\n    this.sort();\n\n    // Update the list of items here because `remove` could be called again\n    // with an item that is in the process of being removed.\n    this.items = this.items.filter(item => !oldItems.includes(item));\n    this._updateItemCount();\n\n    this.once(Shuffle.EventType.LAYOUT, handleLayout);\n  }\n\n  /**\n   * Retrieve a shuffle item by its element.\n   * @param {Element} element Element to look for.\n   * @return {?ShuffleItem} A shuffle item or null if it's not found.\n   */\n  getItemByElement(element) {\n    return this.items.find(item => item.element === element);\n  }\n\n  /**\n   * Destroys shuffle, removes events, styles, and classes\n   */\n  destroy() {\n    this._cancelMovement();\n    window.removeEventListener('resize', this._onResize);\n\n    // Reset container styles\n    this.element.classList.remove('shuffle');\n    this.element.removeAttribute('style');\n\n    // Reset individual item styles\n    this._disposeItems(this.items);\n\n    this.items.length = 0;\n    this._transitions.length = 0;\n\n    // Null DOM references\n    this.options.sizer = null;\n    this.element = null;\n\n    // Set a flag so if a debounced resize has been triggered,\n    // it can first check if it is actually isDestroyed and not doing anything\n    this.isDestroyed = true;\n    this.isEnabled = false;\n  }\n\n  /**\n   * Returns the outer width of an element, optionally including its margins.\n   *\n   * There are a few different methods for getting the width of an element, none of\n   * which work perfectly for all Shuffle's use cases.\n   *\n   * 1. getBoundingClientRect() `left` and `right` properties.\n   *   - Accounts for transform scaled elements, making it useless for Shuffle\n   *   elements which have shrunk.\n   * 2. The `offsetWidth` property.\n   *   - This value stays the same regardless of the elements transform property,\n   *   however, it does not return subpixel values.\n   * 3. getComputedStyle()\n   *   - This works great Chrome, Firefox, Safari, but IE<=11 does not include\n   *   padding and border when box-sizing: border-box is set, requiring a feature\n   *   test and extra work to add the padding back for IE and other browsers which\n   *   follow the W3C spec here.\n   *\n   * @param {Element} element The element.\n   * @param {boolean} [includeMargins] Whether to include margins. Default is false.\n   * @return {{width: number, height: number}} The width and height.\n   */\n  static getSize(element, includeMargins) {\n    // Store the styles so that they can be used by others without asking for it again.\n    const styles = window.getComputedStyle(element, null);\n    let width = getNumberStyle(element, 'width', styles);\n    let height = getNumberStyle(element, 'height', styles);\n\n    if (includeMargins) {\n      const marginLeft = getNumberStyle(element, 'marginLeft', styles);\n      const marginRight = getNumberStyle(element, 'marginRight', styles);\n      const marginTop = getNumberStyle(element, 'marginTop', styles);\n      const marginBottom = getNumberStyle(element, 'marginBottom', styles);\n      width += marginLeft + marginRight;\n      height += marginTop + marginBottom;\n    }\n\n    return {\n      width,\n      height,\n    };\n  }\n\n  /**\n   * Change a property or execute a function which will not have a transition\n   * @param {Array.<Element>} elements DOM elements that won't be transitioned.\n   * @param {Function} callback A function which will be called while transition\n   *     is set to 0ms.\n   * @private\n   */\n  static _skipTransitions(elements, callback) {\n    const zero = '0ms';\n\n    // Save current duration and delay.\n    const data = elements.map((element) => {\n      const style = element.style;\n      const duration = style.transitionDuration;\n      const delay = style.transitionDelay;\n\n      // Set the duration to zero so it happens immediately\n      style.transitionDuration = zero;\n      style.transitionDelay = zero;\n\n      return {\n        duration,\n        delay,\n      };\n    });\n\n    callback();\n\n    // Cause forced synchronous layout.\n    elements[0].offsetWidth; // eslint-disable-line no-unused-expressions\n\n    // Put the duration back\n    elements.forEach((element, i) => {\n      element.style.transitionDuration = data[i].duration;\n      element.style.transitionDelay = data[i].delay;\n    });\n  }\n}\n\nShuffle.ShuffleItem = ShuffleItem;\n\nShuffle.ALL_ITEMS = 'all';\nShuffle.FILTER_ATTRIBUTE_KEY = 'groups';\n\n/**\n * @enum {string}\n */\nShuffle.EventType = {\n  LAYOUT: 'shuffle:layout',\n  REMOVED: 'shuffle:removed',\n};\n\n/** @enum {string} */\nShuffle.Classes = Classes;\n\n/**\n * @enum {string}\n */\nShuffle.FilterMode = {\n  ANY: 'any',\n  ALL: 'all',\n};\n\n// Overrideable options\nShuffle.options = {\n  // Initial filter group.\n  group: Shuffle.ALL_ITEMS,\n\n  // Transition/animation speed (milliseconds).\n  speed: 250,\n\n  // CSS easing function to use.\n  easing: 'ease',\n\n  // e.g. '.picture-item'.\n  itemSelector: '*',\n\n  // Element or selector string. Use an element to determine the size of columns\n  // and gutters.\n  sizer: null,\n\n  // A static number or function that tells the plugin how wide the gutters\n  // between columns are (in pixels).\n  gutterWidth: 0,\n\n  // A static number or function that returns a number which tells the plugin\n  // how wide the columns are (in pixels).\n  columnWidth: 0,\n\n  // If your group is not json, and is comma delimeted, you could set delimeter\n  // to ','.\n  delimeter: null,\n\n  // Useful for percentage based heights when they might not always be exactly\n  // the same (in pixels).\n  buffer: 0,\n\n  // Reading the width of elements isn't precise enough and can cause columns to\n  // jump between values.\n  columnThreshold: 0.01,\n\n  // Shuffle can be isInitialized with a sort object. It is the same object\n  // given to the sort method.\n  initialSort: null,\n\n  // By default, shuffle will throttle resize events. This can be changed or\n  // removed.\n  throttle,\n\n  // How often shuffle can be called on resize (in milliseconds).\n  throttleTime: 300,\n\n  // Transition delay offset for each item in milliseconds.\n  staggerAmount: 15,\n\n  // Maximum stagger delay in milliseconds.\n  staggerAmountMax: 250,\n\n  // Whether to use transforms or absolute positioning.\n  useTransforms: true,\n\n  // Affects using an array with filter. e.g. `filter(['one', 'two'])`. With \"any\",\n  // the element passes the test if any of its groups are in the array. With \"all\",\n  // the element only passes if all groups are in the array.\n  filterMode: Shuffle.FilterMode.ANY,\n};\n\n// Expose for testing. Hack at your own risk.\nShuffle.__Point = Point;\nShuffle.__sorter = sorter;\nShuffle.__getColumnSpan = getColumnSpan;\nShuffle.__getAvailablePositions = getAvailablePositions;\nShuffle.__getShortColumn = getShortColumn;\n\nexport default Shuffle;\n"],"names":["getNumber","value","parseFloat","Point","x","y","a","b","id","ShuffleItem","element","isVisible","classList","remove","Classes","HIDDEN","add","VISIBLE","removeAttribute","setAttribute","addClasses","SHUFFLE_ITEM","applyCss","Css","INITIAL","scale","Scale","point","classes","forEach","className","obj","keys","key","style","removeClasses","document","body","documentElement","e","createElement","cssText","appendChild","width","window","getComputedStyle","ret","removeChild","getNumberStyle","styles","COMPUTED_SIZE_INCLUDES_PADDING","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","randomize","array","n","length","i","Math","floor","random","temp","defaults","sorter","arr","options","opts","Object","assign","original","Array","from","revert","by","sort","valA","valB","undefined","reverse","transitions","eventName","count","uniqueId","cancelTransitionEnd","removeEventListener","listener","onTransitionEnd","callback","evt","currentTarget","target","addEventListener","arrayMax","max","apply","arrayMin","min","getColumnSpan","itemWidth","columnWidth","columns","threshold","columnSpan","abs","round","ceil","getAvailablePositions","positions","available","push","slice","getShortColumn","buffer","minPosition","len","getItemPosition","itemSize","gridSize","total","span","setY","shortColumnIndex","setHeight","height","arrayUnique","Set","Shuffle","useSizer","lastSort","group","ALL_ITEMS","lastFilter","isEnabled","isDestroyed","isInitialized","_transitions","isTransitioning","_queue","el","_getElementOption","TypeError","_init","items","_getItems","sizer","BASE","_initItems","_onResize","_getResizeFunction","readyState","layout","bind","onLoad","containerCss","containerWidth","getSize","_validateStyles","_setColumns","filter","initialSort","offsetWidth","setItemTransitions","transition","speed","easing","resizeFunction","_handleResize","throttle","throttleTime","option","querySelector","nodeType","jquery","position","overflow","category","collection","set","_getFilteredSets","_toggleFilterClasses","visible","hidden","item","_doesPassFilter","call","attr","getAttribute","FILTER_ATTRIBUTE_KEY","delimeter","split","JSON","parse","testCategory","includes","isArray","filterMode","FilterMode","ANY","some","every","show","hide","init","dispose","visibleItems","_getFilteredItems","str","useTransforms","children","matches","itemSelector","map","concat","indexOf","gutterSize","size","gutterWidth","gutter","_getGutterSize","_getColumnSize","calculatedColumns","columnThreshold","cols","colWidth","_getContainerSize","index","staggerAmount","staggerAmountMax","name","data","shuffle","emit","currPos","currScale","pos","_getItemPosition","transitionDelay","after","equals","before","_getStaggerAmount","_getConcealedItems","update","transform","left","top","itemCallback","done","getStylesForTransition","_whenTransitionDone","_cancelMovement","hasSpeed","hasQueue","_startTransitions","_styleImmediately","_dispatch","EventType","LAYOUT","callbacks","_getTransitionFunction","_movementFinished","objects","elements","_skipTransitions","sortObj","_filter","_shrink","_updateItemCount","sortOptions","_resetCols","_layout","_processQueue","_setContainerSize","isOnlyLayout","newItems","_saveNewItems","isUpdateLayout","oldItems","getItemByElement","handleLayout","_disposeItems","parentNode","REMOVED","once","find","includeMargins","marginLeft","marginRight","marginTop","marginBottom","zero","duration","transitionDuration","delay","TinyEmitter","__Point","__sorter","__getColumnSpan","__getAvailablePositions","__getShortColumn"],"mappings":"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"}